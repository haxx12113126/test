import requests

cookies = {
    '_cfuvid': '3hStj4lSdLqnnCsTKryC3fEgtE82O4VnI02vO36jyh8-1700494980410-0-604800000',
}

headers = {
    'authority': 'client-api.arkoselabs.com',
    'accept': '*/*',
    'accept-language': 'zh-CN,zh;q=0.9,en;q=0.8,ak;q=0.7',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    # 'cookie': '_cfuvid=3hStj4lSdLqnnCsTKryC3fEgtE82O4VnI02vO36jyh8-1700494980410-0-604800000',
    'dnt': '1',
    'origin': 'https://client-api.arkoselabs.com',
    'referer': 'https://client-api.arkoselabs.com/v2/2.2.2/enforcement.7fe4ebdd37c791e59a12da2c9c38eec6.html',
    'sec-ch-ua': '"Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    'sec-gpc': '1',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
}

data = 'bda=%3D%3D&public_key=35536E1E-65B4-4D96-9D97-6ADB7EFF8147&site=https%3A%2F%2F121.37.20.242%3A18886&userbrowser=Mozilla%2F5.0%20(Windows%20NT%2010.0%3B%20Win64%3B%20x64)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F119.0.0.0%20Safari%2F537.36&capi_version=2.2.2&capi_mode=inline&style_theme=default&rnd=0.01523923472275146'

def rttoken():
    response = requests.post(
        'https://client-api.arkoselabs.com/fc/gt2/public_key/35536E1E-65B4-4D96-9D97-6ADB7EFF8147',
        cookies=cookies,
        headers=headers,
        data=data,
        verify=False,
    )

    # print(response.json())
    djson = response.json()
    print("token", djson['token'])
    return djson['token']